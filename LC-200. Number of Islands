
public class Solution {
    static int numIslands(char[][] grid) {
        int count = 0;
        
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[i].length; j++) {
                if (grid[i][j] == '1') {
                    count++;
                    clearRestOfLand(grid, i, j);
                }
            }
        }
        return count;
    }
    
    static void clearRestOfLand(char[][] grid, int i, int j) {
        if (i<0||j<0||i>=grid.length||j>=grid[i].length||grid[i][j]=='0')
            return;
        
        grid[i][j] = '0';
        clearRestOfLand(grid, i+1, j);
        clearRestOfLand(grid, i-1, j);
        clearRestOfLand(grid, i, j+1);
        clearRestOfLand(grid, i, j-1);
        return;
    }
-------------------------------------------------------------------------------------------------
public class Solution {
    static int numIslands(char[][] grid,int r,int c) {
        int count = 0;
        
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (grid[i][j] == '1') {
                    count++;
                    clearRestOfLand(grid, i, j,r,c);
                }
            }
        }
        return count;
    }
    
    static void clearRestOfLand(char[][] grid, int i, int j,int r,int c) {
        if (i<0||j<0||i>=r||j>=c||grid[i][j]=='0')
            return;
        
        grid[i][j] = '0';
        clearRestOfLand(grid, i+1, j, r, c);
        clearRestOfLand(grid, i-1, j, r, c);
        clearRestOfLand(grid, i, j+1, r, c);
        clearRestOfLand(grid, i, j-1, r, c);
        return;
    }
    public static void main(String arg[])
    {
        Scanner z=new Scanner(System.in);
        int r=z.nextInt();
        int c=z.nextInt();
        char a[][]=new char[r][c];
        for(int i=0;i<r;i++)
            for(int j=0;j<c;j++)
                a[i][j]=z.next().charAt(0);
        System.out.println(numIslands(a,r,c));
        
    }
}
==================================================================================
class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        count = 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == "1":
                    self.fun(grid, i, j)
                    count += 1
        return count
    
    def fun(self, l, i, j):
        if i < 0 or j < 0 or i >= len(l) or j >= len(l[0]) or l[i][j] == "0":
            return
        l[i][j] = "0"
        self.fun(l, i + 1, j)
        self.fun(l, i - 1, j)
        self.fun(l, i, j + 1)
        self.fun(l, i, j - 1)
